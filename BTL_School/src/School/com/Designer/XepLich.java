/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package School.com.Designer;

import School.com.DAO.GiangVienDAO;
import School.com.DAO.StudentGroupDAO;
import School.com.Modal.StudentGroup;
import School.com.Modal.Teacher;
import java.util.ArrayList;
import School.com.DAO.CourseDAO;
import School.com.DAO.RoomDAO;
import School.com.DAO.StudyScheduleDAO;
import School.com.Modal.ClassModel;
import School.com.Modal.Course;
import School.com.Modal.Data;
import School.com.Modal.Room;
import School.com.Modal.Schedule;
import School.com.Modal.StudySchedule;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Random;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author DO BINH
 */
public class XepLich extends javax.swing.JFrame {

    /**
     * Creates new form XepLich
     */
    public XepLich() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jOptionPane1 = new javax.swing.JOptionPane();
        jDialog1 = new javax.swing.JDialog();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jPanel1 = new javax.swing.JPanel();
        btnxeplich = new javax.swing.JButton();
        btnChapNhan = new javax.swing.JButton();
        txtNam = new javax.swing.JTextField();
        txtKI = new javax.swing.JTextField();
        txtMaKhoa = new javax.swing.JTextField();
        jDesktopPane2 = new javax.swing.JDesktopPane();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblXepLich = new javax.swing.JTable();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnxeplich.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnxeplich.setLabel("Xếp Lịch");
        btnxeplich.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnxeplichActionPerformed(evt);
            }
        });

        btnChapNhan.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnChapNhan.setText("Chấp Nhận");
        btnChapNhan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChapNhanActionPerformed(evt);
            }
        });

        txtNam.setText("Nhập Năm");

        txtKI.setText("Nhập kì ");

        txtMaKhoa.setText("Nhập Mã Khoa");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(txtMaKhoa, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                .addGap(251, 251, 251)
                .addComponent(txtKI, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(txtNam, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(btnxeplich, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnChapNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(215, 215, 215))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(txtMaKhoa, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnxeplich)
                            .addComponent(btnChapNhan)
                            .addComponent(txtNam, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtKI, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jDesktopPane1.setLayer(jPanel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tblXepLich.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblXepLich);

        jTabbedPane1.addTab("Thông Tin Lịch Được Xếp", jScrollPane1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 598, Short.MAX_VALUE)
                .addContainerGap())
        );

        jDesktopPane2.setLayer(jPanel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane2Layout = new javax.swing.GroupLayout(jDesktopPane2);
        jDesktopPane2.setLayout(jDesktopPane2Layout);
        jDesktopPane2Layout.setHorizontalGroup(
            jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDesktopPane2Layout.setVerticalGroup(
            jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDesktopPane1)
                    .addComponent(jDesktopPane2))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jDesktopPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void hienThi(Schedule t){
         DefaultTableModel model=new DefaultTableModel(new String[]{"Mã lớp học phần","Mã học phần","Mã giảng viên","Mã phòng học","Tên lớp","Thứ","Tiết bắt đầu","Thời gian","Tiết kết thúc"},0);
         for(ClassModel it:t.getClasses()){
             model.addRow(new Object[]{it.getStudentGroup().getId(),it.getStudentGroup().getIdCourse(),it.getTeacher().getId(),it.getRoom().getId(),it.getStudentGroup().getName(),it.getClassTime().getDay(),it.getClassTime().getSt(),it.getClassTime().getDur(),it.getClassTime().getEd()});
         }
         tblXepLich.setModel(model);
    }
    private void btnxeplichActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnxeplichActionPerformed
        GiangVienDAO teacherDA0=new GiangVienDAO();
        StudentGroupDAO studentGroupDAO=new StudentGroupDAO();
        ArrayList<Teacher>teachers=teacherDA0.get(txtMaKhoa.getText());
        RoomDAO roomDAO=new RoomDAO();
        int ki=Integer.parseInt(txtKI.getText());
        int nam=Integer.parseInt(txtNam.getText());
        ArrayList<StudentGroup> studentGroups=studentGroupDAO.getList(txtMaKhoa.getText(),nam,ki);
        CourseDAO courseDAO=new CourseDAO();
        HashMap<String,Course> courses=courseDAO.getList(txtMaKhoa.getText());
        ArrayList<Room>rooms=roomDAO.getList(txtMaKhoa.getText());
        Data data = new Data(teachers, rooms, studentGroups, courses);

        // Generate initial population
        List<Schedule> population = new ArrayList<>();
        for (int i = 0; i < 100; i++) {
            Schedule schedule = new Schedule(data);
            schedule.initialize();
            population.add(schedule);
        }

        // Genetic algorithm loop
        while (true) {
            population.sort(Schedule::compareTo);

            if (population.get(0).getFitness()>= 1) {
               hienThi(population.get(0));
                break;
            }

            List<Schedule> newGeneration = new ArrayList<>();
            for (int i = 0; i < 10; i++) {
                newGeneration.add(population.get(i));
            }

            Random random = new Random();
            for (int i = 0; i < 90; i++) {
                int index1 = random.nextInt(population.size());
                int index2 = random.nextInt(population.size());

                Schedule offspring = population.get(index1).mate(population.get(index2));
                newGeneration.add(offspring);
            }

            population = newGeneration;
        }
        
    }//GEN-LAST:event_btnxeplichActionPerformed

    private void btnChapNhanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChapNhanActionPerformed
         if(tblXepLich.getModel()!=null){
             StudentGroupDAO studentGroupDAO=new StudentGroupDAO();
             StudyScheduleDAO studyScheduleDAO=new StudyScheduleDAO();
            SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
             ArrayList<ArrayList<StudySchedule>> lst = new ArrayList<>(8);
             for (int i = 0; i < 8; i++) {
                     lst.add(new ArrayList<>());
             }
            for(int i=0;i<tblXepLich.getModel().getRowCount();i++){
                 
                 int day=(int) tblXepLich.getValueAt(i,5);
                 if(day<=1 ||day>=8) continue;
            String maGV=tblXepLich.getValueAt(i, 2).toString();
            String param1 = tblXepLich.getValueAt(i, 0).toString();
            String param2 = tblXepLich.getValueAt(i, 3).toString();
            int param3 = Integer.parseInt(tblXepLich.getValueAt(i, 6).toString());
            int param4 = Integer.parseInt(tblXepLich.getValueAt(i, 8).toString());
            
            studentGroupDAO.updateMaGV(maGV, param1);
            StudySchedule schedule = new StudySchedule(param1, param2, param3, param4);
            lst.get(day).add(schedule);
            }
        
        // Get the start date from JDateChooser
        // Convert Date to LocalDate

        // Calculate the end date which is 15 weeks after the start date

        // Iterate through the days from startLocalDate to endLocalDate
       
    
        }
    }//GEN-LAST:event_btnChapNhanActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(XepLich.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(XepLich.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(XepLich.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(XepLich.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new XepLich().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChapNhan;
    private javax.swing.JButton btnxeplich;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JDesktopPane jDesktopPane2;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JOptionPane jOptionPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tblXepLich;
    private javax.swing.JTextField txtKI;
    private javax.swing.JTextField txtMaKhoa;
    private javax.swing.JTextField txtNam;
    // End of variables declaration//GEN-END:variables
}
